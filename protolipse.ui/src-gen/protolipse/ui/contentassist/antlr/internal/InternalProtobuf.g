/*
 * generated by Xtext
 */
grammar InternalProtobuf;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package protolipse.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package protolipse.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import protolipse.services.ProtobufGrammarAccess;

}

@parser::members {
 
 	private ProtobufGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ProtobufGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProto
entryRuleProto 
:
{ before(grammarAccess.getProtoRule()); }
	 ruleProto
{ after(grammarAccess.getProtoRule()); } 
	 EOF 
;

// Rule Proto
ruleProto
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProtoAccess().getGroup()); }
(rule__Proto__Group__0)
{ after(grammarAccess.getProtoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSyntax
entryRuleSyntax 
:
{ before(grammarAccess.getSyntaxRule()); }
	 ruleSyntax
{ after(grammarAccess.getSyntaxRule()); } 
	 EOF 
;

// Rule Syntax
ruleSyntax
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSyntaxAccess().getGroup()); }
(rule__Syntax__Group__0)
{ after(grammarAccess.getSyntaxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackage
entryRulePackage 
:
{ before(grammarAccess.getPackageRule()); }
	 rulePackage
{ after(grammarAccess.getPackageRule()); } 
	 EOF 
;

// Rule Package
rulePackage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageAccess().getGroup()); }
(rule__Package__Group__0)
{ after(grammarAccess.getPackageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOption
entryRuleOption 
:
{ before(grammarAccess.getOptionRule()); }
	 ruleOption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule Option
ruleOption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionAccess().getGroup()); }
(rule__Option__Group__0)
{ after(grammarAccess.getOptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getSimpleValueLinkParserRuleCall()); }
	ruleSimpleValueLink
{ after(grammarAccess.getValueAccess().getSimpleValueLinkParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleValueLink
entryRuleSimpleValueLink 
:
{ before(grammarAccess.getSimpleValueLinkRule()); }
	 ruleSimpleValueLink
{ after(grammarAccess.getSimpleValueLinkRule()); } 
	 EOF 
;

// Rule SimpleValueLink
ruleSimpleValueLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleValueLinkAccess().getAlternatives()); }
(rule__SimpleValueLink__Alternatives)
{ after(grammarAccess.getSimpleValueLinkAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringLink
entryRuleStringLink 
:
{ before(grammarAccess.getStringLinkRule()); }
	 ruleStringLink
{ after(grammarAccess.getStringLinkRule()); } 
	 EOF 
;

// Rule StringLink
ruleStringLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringLinkAccess().getTargetAssignment()); }
(rule__StringLink__TargetAssignment)
{ after(grammarAccess.getStringLinkAccess().getTargetAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanLink
entryRuleBooleanLink 
:
{ before(grammarAccess.getBooleanLinkRule()); }
	 ruleBooleanLink
{ after(grammarAccess.getBooleanLinkRule()); } 
	 EOF 
;

// Rule BooleanLink
ruleBooleanLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanLinkAccess().getTargetAssignment()); }
(rule__BooleanLink__TargetAssignment)
{ after(grammarAccess.getBooleanLinkAccess().getTargetAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberLink
entryRuleNumberLink 
:
{ before(grammarAccess.getNumberLinkRule()); }
	 ruleNumberLink
{ after(grammarAccess.getNumberLinkRule()); } 
	 EOF 
;

// Rule NumberLink
ruleNumberLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberLinkAccess().getAlternatives()); }
(rule__NumberLink__Alternatives)
{ after(grammarAccess.getNumberLinkAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntLink
entryRuleIntLink 
:
{ before(grammarAccess.getIntLinkRule()); }
	 ruleIntLink
{ after(grammarAccess.getIntLinkRule()); } 
	 EOF 
;

// Rule IntLink
ruleIntLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntLinkAccess().getTargetAssignment()); }
(rule__IntLink__TargetAssignment)
{ after(grammarAccess.getIntLinkAccess().getTargetAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoubleLink
entryRuleDoubleLink 
:
{ before(grammarAccess.getDoubleLinkRule()); }
	 ruleDoubleLink
{ after(grammarAccess.getDoubleLinkRule()); } 
	 EOF 
;

// Rule DoubleLink
ruleDoubleLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoubleLinkAccess().getTargetAssignment()); }
(rule__DoubleLink__TargetAssignment)
{ after(grammarAccess.getDoubleLinkAccess().getTargetAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexType
entryRuleComplexType 
:
{ before(grammarAccess.getComplexTypeRule()); }
	 ruleComplexType
{ after(grammarAccess.getComplexTypeRule()); } 
	 EOF 
;

// Rule ComplexType
ruleComplexType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexTypeAccess().getAlternatives()); }
(rule__ComplexType__Alternatives)
{ after(grammarAccess.getComplexTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtensibleType
entryRuleExtensibleType 
:
{ before(grammarAccess.getExtensibleTypeRule()); }
	 ruleExtensibleType
{ after(grammarAccess.getExtensibleTypeRule()); } 
	 EOF 
;

// Rule ExtensibleType
ruleExtensibleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtensibleTypeAccess().getAlternatives()); }
(rule__ExtensibleType__Alternatives)
{ after(grammarAccess.getExtensibleTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessage
entryRuleMessage 
:
{ before(grammarAccess.getMessageRule()); }
	 ruleMessage
{ after(grammarAccess.getMessageRule()); } 
	 EOF 
;

// Rule Message
ruleMessage
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageAccess().getGroup()); }
(rule__Message__Group__0)
{ after(grammarAccess.getMessageAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageElement
entryRuleMessageElement 
:
{ before(grammarAccess.getMessageElementRule()); }
	 ruleMessageElement
{ after(grammarAccess.getMessageElementRule()); } 
	 EOF 
;

// Rule MessageElement
ruleMessageElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageElementAccess().getAlternatives()); }
(rule__MessageElement__Alternatives)
{ after(grammarAccess.getMessageElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIndexedElement
entryRuleIndexedElement 
:
{ before(grammarAccess.getIndexedElementRule()); }
	 ruleIndexedElement
{ after(grammarAccess.getIndexedElementRule()); } 
	 EOF 
;

// Rule IndexedElement
ruleIndexedElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIndexedElementAccess().getAlternatives()); }
(rule__IndexedElement__Alternatives)
{ after(grammarAccess.getIndexedElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtensionRange
entryRuleExtensionRange 
:
{ before(grammarAccess.getExtensionRangeRule()); }
	 ruleExtensionRange
{ after(grammarAccess.getExtensionRangeRule()); } 
	 EOF 
;

// Rule ExtensionRange
ruleExtensionRange
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtensionRangeAccess().getGroup()); }
(rule__ExtensionRange__Group__0)
{ after(grammarAccess.getExtensionRangeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageField
entryRuleMessageField 
:
{ before(grammarAccess.getMessageFieldRule()); }
	 ruleMessageField
{ after(grammarAccess.getMessageFieldRule()); } 
	 EOF 
;

// Rule MessageField
ruleMessageField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageFieldAccess().getGroup()); }
(rule__MessageField__Group__0)
{ after(grammarAccess.getMessageFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGroup
entryRuleGroup 
:
{ before(grammarAccess.getGroupRule()); }
	 ruleGroup
{ after(grammarAccess.getGroupRule()); } 
	 EOF 
;

// Rule Group
ruleGroup
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGroupAccess().getGroup()); }
(rule__Group__Group__0)
{ after(grammarAccess.getGroupAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeLink
entryRuleTypeLink 
:
{ before(grammarAccess.getTypeLinkRule()); }
	 ruleTypeLink
{ after(grammarAccess.getTypeLinkRule()); } 
	 EOF 
;

// Rule TypeLink
ruleTypeLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeLinkAccess().getAlternatives()); }
(rule__TypeLink__Alternatives)
{ after(grammarAccess.getTypeLinkAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleComplexTypeLink
entryRuleComplexTypeLink 
:
{ before(grammarAccess.getComplexTypeLinkRule()); }
	 ruleComplexTypeLink
{ after(grammarAccess.getComplexTypeLinkRule()); } 
	 EOF 
;

// Rule ComplexTypeLink
ruleComplexTypeLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getComplexTypeLinkAccess().getTargetAssignment()); }
(rule__ComplexTypeLink__TargetAssignment)
{ after(grammarAccess.getComplexTypeLinkAccess().getTargetAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleScalarTypeLink
entryRuleScalarTypeLink 
:
{ before(grammarAccess.getScalarTypeLinkRule()); }
	 ruleScalarTypeLink
{ after(grammarAccess.getScalarTypeLinkRule()); } 
	 EOF 
;

// Rule ScalarTypeLink
ruleScalarTypeLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getScalarTypeLinkAccess().getTargetAssignment()); }
(rule__ScalarTypeLink__TargetAssignment)
{ after(grammarAccess.getScalarTypeLinkAccess().getTargetAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldOptions
entryRuleFieldOptions 
:
{ before(grammarAccess.getFieldOptionsRule()); }
	 ruleFieldOptions
{ after(grammarAccess.getFieldOptionsRule()); } 
	 EOF 
;

// Rule FieldOptions
ruleFieldOptions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldOptionsAccess().getGroup()); }
(rule__FieldOptions__Group__0)
{ after(grammarAccess.getFieldOptionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldOption
entryRuleFieldOption 
:
{ before(grammarAccess.getFieldOptionRule()); }
	 ruleFieldOption
{ after(grammarAccess.getFieldOptionRule()); } 
	 EOF 
;

// Rule FieldOption
ruleFieldOption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldOptionAccess().getAlternatives()); }
(rule__FieldOption__Alternatives)
{ after(grammarAccess.getFieldOptionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultValueFieldOption
entryRuleDefaultValueFieldOption 
:
{ before(grammarAccess.getDefaultValueFieldOptionRule()); }
	 ruleDefaultValueFieldOption
{ after(grammarAccess.getDefaultValueFieldOptionRule()); } 
	 EOF 
;

// Rule DefaultValueFieldOption
ruleDefaultValueFieldOption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultValueFieldOptionAccess().getGroup()); }
(rule__DefaultValueFieldOption__Group__0)
{ after(grammarAccess.getDefaultValueFieldOptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNativeFieldOption
entryRuleNativeFieldOption 
:
{ before(grammarAccess.getNativeFieldOptionRule()); }
	 ruleNativeFieldOption
{ after(grammarAccess.getNativeFieldOptionRule()); } 
	 EOF 
;

// Rule NativeFieldOption
ruleNativeFieldOption
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNativeFieldOptionAccess().getGroup()); }
(rule__NativeFieldOption__Group__0)
{ after(grammarAccess.getNativeFieldOptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionSource
entryRuleOptionSource 
:
{ before(grammarAccess.getOptionSourceRule()); }
	 ruleOptionSource
{ after(grammarAccess.getOptionSourceRule()); } 
	 EOF 
;

// Rule OptionSource
ruleOptionSource
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionSourceAccess().getTargetAssignment()); }
(rule__OptionSource__TargetAssignment)
{ after(grammarAccess.getOptionSourceAccess().getTargetAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnum
entryRuleEnum 
:
{ before(grammarAccess.getEnumRule()); }
	 ruleEnum
{ after(grammarAccess.getEnumRule()); } 
	 EOF 
;

// Rule Enum
ruleEnum
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumAccess().getGroup()); }
(rule__Enum__Group__0)
{ after(grammarAccess.getEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumElement
entryRuleEnumElement 
:
{ before(grammarAccess.getEnumElementRule()); }
	 ruleEnumElement
{ after(grammarAccess.getEnumElementRule()); } 
	 EOF 
;

// Rule EnumElement
ruleEnumElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumElementAccess().getAlternatives()); }
(rule__EnumElement__Alternatives)
{ after(grammarAccess.getEnumElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumField
entryRuleEnumField 
:
{ before(grammarAccess.getEnumFieldRule()); }
	 ruleEnumField
{ after(grammarAccess.getEnumFieldRule()); } 
	 EOF 
;

// Rule EnumField
ruleEnumField
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumFieldAccess().getGroup()); }
(rule__EnumField__Group__0)
{ after(grammarAccess.getEnumFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleService
entryRuleService 
:
{ before(grammarAccess.getServiceRule()); }
	 ruleService
{ after(grammarAccess.getServiceRule()); } 
	 EOF 
;

// Rule Service
ruleService
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getServiceAccess().getGroup()); }
(rule__Service__Group__0)
{ after(grammarAccess.getServiceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleServiceElement
entryRuleServiceElement 
:
{ before(grammarAccess.getServiceElementRule()); }
	 ruleServiceElement
{ after(grammarAccess.getServiceElementRule()); } 
	 EOF 
;

// Rule ServiceElement
ruleServiceElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getServiceElementAccess().getAlternatives()); }
(rule__ServiceElement__Alternatives)
{ after(grammarAccess.getServiceElementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRpc
entryRuleRpc 
:
{ before(grammarAccess.getRpcRule()); }
	 ruleRpc
{ after(grammarAccess.getRpcRule()); } 
	 EOF 
;

// Rule Rpc
ruleRpc
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRpcAccess().getGroup()); }
(rule__Rpc__Group__0)
{ after(grammarAccess.getRpcAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMessageLink
entryRuleMessageLink 
:
{ before(grammarAccess.getMessageLinkRule()); }
	 ruleMessageLink
{ after(grammarAccess.getMessageLinkRule()); } 
	 EOF 
;

// Rule MessageLink
ruleMessageLink
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMessageLinkAccess().getTargetAssignment()); }
(rule__MessageLink__TargetAssignment)
{ after(grammarAccess.getMessageLinkAccess().getTargetAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtend
entryRuleExtend 
:
{ before(grammarAccess.getExtendRule()); }
	 ruleExtend
{ after(grammarAccess.getExtendRule()); } 
	 EOF 
;

// Rule Extend
ruleExtend
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendAccess().getGroup()); }
(rule__Extend__Group__0)
{ after(grammarAccess.getExtendAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVar_full
entryRuleVar_full 
:
{ before(grammarAccess.getVar_fullRule()); }
	 ruleVar_full
{ after(grammarAccess.getVar_fullRule()); } 
	 EOF 
;

// Rule Var_full
ruleVar_full
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVar_fullAccess().getAlternatives()); }
(rule__Var_full__Alternatives)
{ after(grammarAccess.getVar_fullAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVar
entryRuleVar 
:
{ before(grammarAccess.getVarRule()); }
	 ruleVar
{ after(grammarAccess.getVarRule()); } 
	 EOF 
;

// Rule Var
ruleVar
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarAccess().getAlternatives()); }
(rule__Var__Alternatives)
{ after(grammarAccess.getVarAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFULL_ID
entryRuleFULL_ID 
:
{ before(grammarAccess.getFULL_IDRule()); }
	 ruleFULL_ID
{ after(grammarAccess.getFULL_IDRule()); } 
	 EOF 
;

// Rule FULL_ID
ruleFULL_ID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFULL_IDAccess().getGroup()); }
(rule__FULL_ID__Group__0)
{ after(grammarAccess.getFULL_IDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarReserved
entryRuleVarReserved 
:
{ before(grammarAccess.getVarReservedRule()); }
	 ruleVarReserved
{ after(grammarAccess.getVarReservedRule()); } 
	 EOF 
;

// Rule VarReserved
ruleVarReserved
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarReservedAccess().getAlternatives()); }
(rule__VarReserved__Alternatives)
{ after(grammarAccess.getVarReservedAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule BOOL
ruleBOOL
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLAccess().getAlternatives()); }
(rule__BOOL__Alternatives)
{ after(grammarAccess.getBOOLAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule Modifier
ruleModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getAlternatives()); }
(rule__Modifier__Alternatives)
{ after(grammarAccess.getModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ScalarType
ruleScalarType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getAlternatives()); }
(rule__ScalarType__Alternatives)
{ after(grammarAccess.getScalarTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getPackageParserRuleCall_0()); }
	rulePackage
{ after(grammarAccess.getStatementAccess().getPackageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getImportParserRuleCall_1()); }
	ruleImport
{ after(grammarAccess.getStatementAccess().getImportParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getComplexTypeParserRuleCall_2()); }
	ruleComplexType
{ after(grammarAccess.getStatementAccess().getComplexTypeParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getExtendParserRuleCall_3()); }
	ruleExtend
{ after(grammarAccess.getStatementAccess().getExtendParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getServiceParserRuleCall_4()); }
	ruleService
{ after(grammarAccess.getStatementAccess().getServiceParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getOptionParserRuleCall_5()); }
	ruleOption
{ after(grammarAccess.getStatementAccess().getOptionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleValueLink__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleValueLinkAccess().getNumberLinkParserRuleCall_0()); }
	ruleNumberLink
{ after(grammarAccess.getSimpleValueLinkAccess().getNumberLinkParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSimpleValueLinkAccess().getBooleanLinkParserRuleCall_1()); }
	ruleBooleanLink
{ after(grammarAccess.getSimpleValueLinkAccess().getBooleanLinkParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSimpleValueLinkAccess().getStringLinkParserRuleCall_2()); }
	ruleStringLink
{ after(grammarAccess.getSimpleValueLinkAccess().getStringLinkParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberLink__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberLinkAccess().getIntLinkParserRuleCall_0()); }
	ruleIntLink
{ after(grammarAccess.getNumberLinkAccess().getIntLinkParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberLinkAccess().getDoubleLinkParserRuleCall_1()); }
	ruleDoubleLink
{ after(grammarAccess.getNumberLinkAccess().getDoubleLinkParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeAccess().getEnumParserRuleCall_0()); }
	ruleEnum
{ after(grammarAccess.getComplexTypeAccess().getEnumParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getComplexTypeAccess().getExtensibleTypeParserRuleCall_1()); }
	ruleExtensibleType
{ after(grammarAccess.getComplexTypeAccess().getExtensibleTypeParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensibleType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensibleTypeAccess().getMessageParserRuleCall_0()); }
	ruleMessage
{ after(grammarAccess.getExtensibleTypeAccess().getMessageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExtensibleTypeAccess().getGroupParserRuleCall_1()); }
	ruleGroup
{ after(grammarAccess.getExtensibleTypeAccess().getGroupParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageElementAccess().getMessageParserRuleCall_0()); }
	ruleMessage
{ after(grammarAccess.getMessageElementAccess().getMessageParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMessageElementAccess().getIndexedElementParserRuleCall_1()); }
	ruleIndexedElement
{ after(grammarAccess.getMessageElementAccess().getIndexedElementParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMessageElementAccess().getEnumParserRuleCall_2()); }
	ruleEnum
{ after(grammarAccess.getMessageElementAccess().getEnumParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getMessageElementAccess().getServiceParserRuleCall_3()); }
	ruleService
{ after(grammarAccess.getMessageElementAccess().getServiceParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getMessageElementAccess().getExtendParserRuleCall_4()); }
	ruleExtend
{ after(grammarAccess.getMessageElementAccess().getExtendParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getMessageElementAccess().getExtensionRangeParserRuleCall_5()); }
	ruleExtensionRange
{ after(grammarAccess.getMessageElementAccess().getExtensionRangeParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getMessageElementAccess().getOptionParserRuleCall_6()); }
	ruleOption
{ after(grammarAccess.getMessageElementAccess().getOptionParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IndexedElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIndexedElementAccess().getMessageFieldParserRuleCall_0()); }
	ruleMessageField
{ after(grammarAccess.getIndexedElementAccess().getMessageFieldParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getIndexedElementAccess().getGroupParserRuleCall_1()); }
	ruleGroup
{ after(grammarAccess.getIndexedElementAccess().getGroupParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeLink__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeLinkAccess().getScalarTypeLinkParserRuleCall_0()); }
(	ruleScalarTypeLink)
{ after(grammarAccess.getTypeLinkAccess().getScalarTypeLinkParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeLinkAccess().getComplexTypeLinkParserRuleCall_1()); }
	ruleComplexTypeLink
{ after(grammarAccess.getTypeLinkAccess().getComplexTypeLinkParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOption__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOptionAccess().getDefaultValueFieldOptionParserRuleCall_0()); }
(	ruleDefaultValueFieldOption)
{ after(grammarAccess.getFieldOptionAccess().getDefaultValueFieldOptionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFieldOptionAccess().getNativeFieldOptionParserRuleCall_1()); }
	ruleNativeFieldOption
{ after(grammarAccess.getFieldOptionAccess().getNativeFieldOptionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumElementAccess().getEnumFieldParserRuleCall_0()); }
	ruleEnumField
{ after(grammarAccess.getEnumElementAccess().getEnumFieldParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEnumElementAccess().getOptionParserRuleCall_1()); }
	ruleOption
{ after(grammarAccess.getEnumElementAccess().getOptionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ServiceElement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceElementAccess().getRpcParserRuleCall_0()); }
	ruleRpc
{ after(grammarAccess.getServiceElementAccess().getRpcParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getServiceElementAccess().getOptionParserRuleCall_1()); }
	ruleOption
{ after(grammarAccess.getServiceElementAccess().getOptionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var_full__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVar_fullAccess().getFULL_IDParserRuleCall_0()); }
	ruleFULL_ID
{ after(grammarAccess.getVar_fullAccess().getFULL_IDParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVar_fullAccess().getVarParserRuleCall_1()); }
	ruleVar
{ after(grammarAccess.getVar_fullAccess().getVarParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Var__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getVarAccess().getIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVarAccess().getVarReservedParserRuleCall_1()); }
	ruleVarReserved
{ after(grammarAccess.getVarAccess().getVarReservedParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarReserved__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarReservedAccess().getToKeyword_0()); }

	'to' 

{ after(grammarAccess.getVarReservedAccess().getToKeyword_0()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getPackageKeyword_1()); }

	'package' 

{ after(grammarAccess.getVarReservedAccess().getPackageKeyword_1()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getSyntaxKeyword_2()); }

	'syntax' 

{ after(grammarAccess.getVarReservedAccess().getSyntaxKeyword_2()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getImportKeyword_3()); }

	'import' 

{ after(grammarAccess.getVarReservedAccess().getImportKeyword_3()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getOptionKeyword_4()); }

	'option' 

{ after(grammarAccess.getVarReservedAccess().getOptionKeyword_4()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getMessageKeyword_5()); }

	'message' 

{ after(grammarAccess.getVarReservedAccess().getMessageKeyword_5()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getServiceKeyword_6()); }

	'service' 

{ after(grammarAccess.getVarReservedAccess().getServiceKeyword_6()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getEnumKeyword_7()); }

	'enum' 

{ after(grammarAccess.getVarReservedAccess().getEnumKeyword_7()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getRequiredKeyword_8()); }

	'required' 

{ after(grammarAccess.getVarReservedAccess().getRequiredKeyword_8()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getOptionalKeyword_9()); }

	'optional' 

{ after(grammarAccess.getVarReservedAccess().getOptionalKeyword_9()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getRepeatedKeyword_10()); }

	'repeated' 

{ after(grammarAccess.getVarReservedAccess().getRepeatedKeyword_10()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getExtensionsKeyword_11()); }

	'extensions' 

{ after(grammarAccess.getVarReservedAccess().getExtensionsKeyword_11()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getExtendKeyword_12()); }

	'extend' 

{ after(grammarAccess.getVarReservedAccess().getExtendKeyword_12()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getGroupKeyword_13()); }

	'group' 

{ after(grammarAccess.getVarReservedAccess().getGroupKeyword_13()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getRpcKeyword_14()); }

	'rpc' 

{ after(grammarAccess.getVarReservedAccess().getRpcKeyword_14()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getReturnsKeyword_15()); }

	'returns' 

{ after(grammarAccess.getVarReservedAccess().getReturnsKeyword_15()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getInt32Keyword_16()); }

	'int32' 

{ after(grammarAccess.getVarReservedAccess().getInt32Keyword_16()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getInt64Keyword_17()); }

	'int64' 

{ after(grammarAccess.getVarReservedAccess().getInt64Keyword_17()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getUint32Keyword_18()); }

	'uint32' 

{ after(grammarAccess.getVarReservedAccess().getUint32Keyword_18()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getUint64Keyword_19()); }

	'uint64' 

{ after(grammarAccess.getVarReservedAccess().getUint64Keyword_19()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getSint32Keyword_20()); }

	'sint32' 

{ after(grammarAccess.getVarReservedAccess().getSint32Keyword_20()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getSint64Keyword_21()); }

	'sint64' 

{ after(grammarAccess.getVarReservedAccess().getSint64Keyword_21()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getFixed32Keyword_22()); }

	'fixed32' 

{ after(grammarAccess.getVarReservedAccess().getFixed32Keyword_22()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getFixed64Keyword_23()); }

	'fixed64' 

{ after(grammarAccess.getVarReservedAccess().getFixed64Keyword_23()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getSfixed32Keyword_24()); }

	'sfixed32' 

{ after(grammarAccess.getVarReservedAccess().getSfixed32Keyword_24()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getSfixed64Keyword_25()); }

	'sfixed64' 

{ after(grammarAccess.getVarReservedAccess().getSfixed64Keyword_25()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getFloatKeyword_26()); }

	'float' 

{ after(grammarAccess.getVarReservedAccess().getFloatKeyword_26()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getDoubleKeyword_27()); }

	'double' 

{ after(grammarAccess.getVarReservedAccess().getDoubleKeyword_27()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getBoolKeyword_28()); }

	'bool' 

{ after(grammarAccess.getVarReservedAccess().getBoolKeyword_28()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getStringKeyword_29()); }

	'string' 

{ after(grammarAccess.getVarReservedAccess().getStringKeyword_29()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getBytesKeyword_30()); }

	'bytes' 

{ after(grammarAccess.getVarReservedAccess().getBytesKeyword_30()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getDefaultKeyword_31()); }

	'default' 

{ after(grammarAccess.getVarReservedAccess().getDefaultKeyword_31()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getMaxKeyword_32()); }

	'max' 

{ after(grammarAccess.getVarReservedAccess().getMaxKeyword_32()); }
)

    |(
{ before(grammarAccess.getVarReservedAccess().getVoidKeyword_33()); }

	'void' 

{ after(grammarAccess.getVarReservedAccess().getVoidKeyword_33()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BOOL__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBOOLAccess().getTrueEnumLiteralDeclaration_0()); }
(	'true' 
)
{ after(grammarAccess.getBOOLAccess().getTrueEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBOOLAccess().getFalseEnumLiteralDeclaration_1()); }
(	'false' 
)
{ after(grammarAccess.getBOOLAccess().getFalseEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getOptionalEnumLiteralDeclaration_0()); }
(	'optional' 
)
{ after(grammarAccess.getModifierAccess().getOptionalEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getRequiredEnumLiteralDeclaration_1()); }
(	'required' 
)
{ after(grammarAccess.getModifierAccess().getRequiredEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getModifierAccess().getRepeatedEnumLiteralDeclaration_2()); }
(	'repeated' 
)
{ after(grammarAccess.getModifierAccess().getRepeatedEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeAccess().getInt32EnumLiteralDeclaration_0()); }
(	'int32' 
)
{ after(grammarAccess.getScalarTypeAccess().getInt32EnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getInt64EnumLiteralDeclaration_1()); }
(	'int64' 
)
{ after(grammarAccess.getScalarTypeAccess().getInt64EnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getUint32EnumLiteralDeclaration_2()); }
(	'uint32' 
)
{ after(grammarAccess.getScalarTypeAccess().getUint32EnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getUint64EnumLiteralDeclaration_3()); }
(	'uint64' 
)
{ after(grammarAccess.getScalarTypeAccess().getUint64EnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getSint32EnumLiteralDeclaration_4()); }
(	'sint32' 
)
{ after(grammarAccess.getScalarTypeAccess().getSint32EnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getSint64EnumLiteralDeclaration_5()); }
(	'sint64' 
)
{ after(grammarAccess.getScalarTypeAccess().getSint64EnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getFixed32EnumLiteralDeclaration_6()); }
(	'fixed32' 
)
{ after(grammarAccess.getScalarTypeAccess().getFixed32EnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getFixed64EnumLiteralDeclaration_7()); }
(	'fixed64' 
)
{ after(grammarAccess.getScalarTypeAccess().getFixed64EnumLiteralDeclaration_7()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getSfixed32EnumLiteralDeclaration_8()); }
(	'sfixed32' 
)
{ after(grammarAccess.getScalarTypeAccess().getSfixed32EnumLiteralDeclaration_8()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getSfixed64EnumLiteralDeclaration_9()); }
(	'sfixed64' 
)
{ after(grammarAccess.getScalarTypeAccess().getSfixed64EnumLiteralDeclaration_9()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getFloatEnumLiteralDeclaration_10()); }
(	'float' 
)
{ after(grammarAccess.getScalarTypeAccess().getFloatEnumLiteralDeclaration_10()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getDoubleEnumLiteralDeclaration_11()); }
(	'double' 
)
{ after(grammarAccess.getScalarTypeAccess().getDoubleEnumLiteralDeclaration_11()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getBoolEnumLiteralDeclaration_12()); }
(	'bool' 
)
{ after(grammarAccess.getScalarTypeAccess().getBoolEnumLiteralDeclaration_12()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getStringEnumLiteralDeclaration_13()); }
(	'string' 
)
{ after(grammarAccess.getScalarTypeAccess().getStringEnumLiteralDeclaration_13()); }
)

    |(
{ before(grammarAccess.getScalarTypeAccess().getBytesEnumLiteralDeclaration_14()); }
(	'bytes' 
)
{ after(grammarAccess.getScalarTypeAccess().getBytesEnumLiteralDeclaration_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Proto__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Proto__Group__0__Impl
	rule__Proto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Proto__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtoAccess().getSyntaxAssignment_0()); }
(rule__Proto__SyntaxAssignment_0)?
{ after(grammarAccess.getProtoAccess().getSyntaxAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Proto__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Proto__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Proto__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtoAccess().getStatementsAssignment_1()); }
(rule__Proto__StatementsAssignment_1)*
{ after(grammarAccess.getProtoAccess().getStatementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Syntax__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Syntax__Group__0__Impl
	rule__Syntax__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Syntax__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSyntaxAccess().getSyntaxKeyword_0()); }

	'syntax' 

{ after(grammarAccess.getSyntaxAccess().getSyntaxKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Syntax__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Syntax__Group__1__Impl
	rule__Syntax__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Syntax__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSyntaxAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getSyntaxAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Syntax__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Syntax__Group__2__Impl
	rule__Syntax__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Syntax__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSyntaxAccess().getNameAssignment_2()); }
(rule__Syntax__NameAssignment_2)
{ after(grammarAccess.getSyntaxAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Syntax__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Syntax__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Syntax__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSyntaxAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getSyntaxAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Package__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__0__Impl
	rule__Package__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getPackageKeyword_0()); }

	'package' 

{ after(grammarAccess.getPackageAccess().getPackageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__1__Impl
	rule__Package__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameAssignment_1()); }
(rule__Package__NameAssignment_1)
{ after(grammarAccess.getPackageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Package__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Package__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Package__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getPackageAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
(rule__Import__ImportURIAssignment_1)
{ after(grammarAccess.getImportAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Option__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__0__Impl
	rule__Option__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getOptionKeyword_0()); }

	'option' 

{ after(grammarAccess.getOptionAccess().getOptionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__1__Impl
	rule__Option__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getSourceAssignment_1()); }
(rule__Option__SourceAssignment_1)
{ after(grammarAccess.getOptionAccess().getSourceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__2__Impl
	rule__Option__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getOptionAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__3__Impl
	rule__Option__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getValueAssignment_3()); }
(rule__Option__ValueAssignment_3)
{ after(grammarAccess.getOptionAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Option__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Option__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getOptionAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Message__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__0__Impl
	rule__Message__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getMessageKeyword_0()); }

	'message' 

{ after(grammarAccess.getMessageAccess().getMessageKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__1__Impl
	rule__Message__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getNameAssignment_1()); }
(rule__Message__NameAssignment_1)
{ after(grammarAccess.getMessageAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__2__Impl
	rule__Message__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getMessageAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__3__Impl
	rule__Message__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getElementsAssignment_3()); }
(rule__Message__ElementsAssignment_3)*
{ after(grammarAccess.getMessageAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Message__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Message__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Message__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getMessageAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ExtensionRange__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionRange__Group__0__Impl
	rule__ExtensionRange__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionRange__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionRangeAccess().getExtensionsKeyword_0()); }

	'extensions' 

{ after(grammarAccess.getExtensionRangeAccess().getExtensionsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionRange__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionRange__Group__1__Impl
	rule__ExtensionRange__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionRange__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionRangeAccess().getFromAssignment_1()); }
(rule__ExtensionRange__FromAssignment_1)
{ after(grammarAccess.getExtensionRangeAccess().getFromAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionRange__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionRange__Group__2__Impl
	rule__ExtensionRange__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionRange__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionRangeAccess().getGroup_2()); }
(rule__ExtensionRange__Group_2__0)?
{ after(grammarAccess.getExtensionRangeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionRange__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionRange__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionRange__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionRangeAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getExtensionRangeAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ExtensionRange__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionRange__Group_2__0__Impl
	rule__ExtensionRange__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionRange__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionRangeAccess().getToKeyword_2_0()); }

	'to' 

{ after(grammarAccess.getExtensionRangeAccess().getToKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtensionRange__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtensionRange__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionRange__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionRangeAccess().getToAssignment_2_1()); }
(rule__ExtensionRange__ToAssignment_2_1)
{ after(grammarAccess.getExtensionRangeAccess().getToAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MessageField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageField__Group__0__Impl
	rule__MessageField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getModifierAssignment_0()); }
(rule__MessageField__ModifierAssignment_0)
{ after(grammarAccess.getMessageFieldAccess().getModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageField__Group__1__Impl
	rule__MessageField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getTypeAssignment_1()); }
(rule__MessageField__TypeAssignment_1)
{ after(grammarAccess.getMessageFieldAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageField__Group__2__Impl
	rule__MessageField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getNameAssignment_2()); }
(rule__MessageField__NameAssignment_2)
{ after(grammarAccess.getMessageFieldAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageField__Group__3__Impl
	rule__MessageField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getMessageFieldAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageField__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageField__Group__4__Impl
	rule__MessageField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getIndexAssignment_4()); }
(rule__MessageField__IndexAssignment_4)
{ after(grammarAccess.getMessageFieldAccess().getIndexAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageField__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageField__Group__5__Impl
	rule__MessageField__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getOptionsAssignment_5()); }
(rule__MessageField__OptionsAssignment_5)?
{ after(grammarAccess.getMessageFieldAccess().getOptionsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MessageField__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MessageField__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getSemicolonKeyword_6()); }

	';' 

{ after(grammarAccess.getMessageFieldAccess().getSemicolonKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Group__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__0__Impl
	rule__Group__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getModifierAssignment_0()); }
(rule__Group__ModifierAssignment_0)
{ after(grammarAccess.getGroupAccess().getModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__1__Impl
	rule__Group__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getGroupKeyword_1()); }

	'group' 

{ after(grammarAccess.getGroupAccess().getGroupKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__2__Impl
	rule__Group__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getNameAssignment_2()); }
(rule__Group__NameAssignment_2)
{ after(grammarAccess.getGroupAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__3__Impl
	rule__Group__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getGroupAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__4__Impl
	rule__Group__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getIndexAssignment_4()); }
(rule__Group__IndexAssignment_4)
{ after(grammarAccess.getGroupAccess().getIndexAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__5__Impl
	rule__Group__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_5()); }

	'{' 

{ after(grammarAccess.getGroupAccess().getLeftCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__6__Impl
	rule__Group__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getElementsAssignment_6()); }
(rule__Group__ElementsAssignment_6)*
{ after(grammarAccess.getGroupAccess().getElementsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Group__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Group__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Group__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getGroupAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__FieldOptions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldOptions__Group__0__Impl
	rule__FieldOptions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOptions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOptionsAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getFieldOptionsAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldOptions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldOptions__Group__1__Impl
	rule__FieldOptions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOptions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOptionsAccess().getOptionsAssignment_1()); }
(rule__FieldOptions__OptionsAssignment_1)
{ after(grammarAccess.getFieldOptionsAccess().getOptionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldOptions__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldOptions__Group__2__Impl
	rule__FieldOptions__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOptions__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOptionsAccess().getGroup_2()); }
(rule__FieldOptions__Group_2__0)*
{ after(grammarAccess.getFieldOptionsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldOptions__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldOptions__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOptions__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOptionsAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getFieldOptionsAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FieldOptions__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldOptions__Group_2__0__Impl
	rule__FieldOptions__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOptions__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOptionsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getFieldOptionsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldOptions__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldOptions__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOptions__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOptionsAccess().getOptionsAssignment_2_1()); }
(rule__FieldOptions__OptionsAssignment_2_1)
{ after(grammarAccess.getFieldOptionsAccess().getOptionsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefaultValueFieldOption__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValueFieldOption__Group__0__Impl
	rule__DefaultValueFieldOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValueFieldOption__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueFieldOptionAccess().getDefaultKeyword_0()); }
(
	'default' 
)
{ after(grammarAccess.getDefaultValueFieldOptionAccess().getDefaultKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValueFieldOption__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValueFieldOption__Group__1__Impl
	rule__DefaultValueFieldOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValueFieldOption__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueFieldOptionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getDefaultValueFieldOptionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultValueFieldOption__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultValueFieldOption__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValueFieldOption__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueFieldOptionAccess().getValueAssignment_2()); }
(rule__DefaultValueFieldOption__ValueAssignment_2)
{ after(grammarAccess.getDefaultValueFieldOptionAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NativeFieldOption__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFieldOption__Group__0__Impl
	rule__NativeFieldOption__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFieldOption__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFieldOptionAccess().getSourceAssignment_0()); }
(rule__NativeFieldOption__SourceAssignment_0)
{ after(grammarAccess.getNativeFieldOptionAccess().getSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFieldOption__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFieldOption__Group__1__Impl
	rule__NativeFieldOption__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFieldOption__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFieldOptionAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getNativeFieldOptionAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NativeFieldOption__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NativeFieldOption__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFieldOption__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFieldOptionAccess().getValueAssignment_2()); }
(rule__NativeFieldOption__ValueAssignment_2)
{ after(grammarAccess.getNativeFieldOptionAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Enum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__0__Impl
	rule__Enum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getEnumKeyword_0()); }

	'enum' 

{ after(grammarAccess.getEnumAccess().getEnumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__1__Impl
	rule__Enum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameAssignment_1()); }
(rule__Enum__NameAssignment_1)
{ after(grammarAccess.getEnumAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__2__Impl
	rule__Enum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__3__Impl
	rule__Enum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getElementsAssignment_3()); }
(rule__Enum__ElementsAssignment_3)*
{ after(grammarAccess.getEnumAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Enum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Enum__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group__0__Impl
	rule__EnumField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getNameAssignment_0()); }
(rule__EnumField__NameAssignment_0)
{ after(grammarAccess.getEnumFieldAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group__1__Impl
	rule__EnumField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getEnumFieldAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group__2__Impl
	rule__EnumField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getIndexAssignment_2()); }
(rule__EnumField__IndexAssignment_2)
{ after(grammarAccess.getEnumFieldAccess().getIndexAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group__3__Impl
	rule__EnumField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getGroup_3()); }
(rule__EnumField__Group_3__0)?
{ after(grammarAccess.getEnumFieldAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getEnumFieldAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__EnumField__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group_3__0__Impl
	rule__EnumField__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getLeftSquareBracketKeyword_3_0()); }

	'[' 

{ after(grammarAccess.getEnumFieldAccess().getLeftSquareBracketKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group_3__1__Impl
	rule__EnumField__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getOptionsAssignment_3_1()); }
(rule__EnumField__OptionsAssignment_3_1)
{ after(grammarAccess.getEnumFieldAccess().getOptionsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group_3__2__Impl
	rule__EnumField__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getGroup_3_2()); }
(rule__EnumField__Group_3_2__0)*
{ after(grammarAccess.getEnumFieldAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getRightSquareBracketKeyword_3_3()); }

	']' 

{ after(grammarAccess.getEnumFieldAccess().getRightSquareBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EnumField__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group_3_2__0__Impl
	rule__EnumField__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getEnumFieldAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumField__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumField__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getOptionsAssignment_3_2_1()); }
(rule__EnumField__OptionsAssignment_3_2_1)
{ after(grammarAccess.getEnumFieldAccess().getOptionsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Service__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__0__Impl
	rule__Service__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getServiceKeyword_0()); }

	'service' 

{ after(grammarAccess.getServiceAccess().getServiceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__1__Impl
	rule__Service__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getNameAssignment_1()); }
(rule__Service__NameAssignment_1)
{ after(grammarAccess.getServiceAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__2__Impl
	rule__Service__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getServiceAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__3__Impl
	rule__Service__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getServiceAccess().getElementsAssignment_3()); }
(rule__Service__ElementsAssignment_3)
{ after(grammarAccess.getServiceAccess().getElementsAssignment_3()); }
)
(
{ before(grammarAccess.getServiceAccess().getElementsAssignment_3()); }
(rule__Service__ElementsAssignment_3)*
{ after(grammarAccess.getServiceAccess().getElementsAssignment_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__4__Impl
	rule__Service__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getServiceAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Service__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Service__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Service__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getSemicolonKeyword_5()); }
(
	';' 
)?
{ after(grammarAccess.getServiceAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Rpc__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__0__Impl
	rule__Rpc__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getRpcKeyword_0()); }

	'rpc' 

{ after(grammarAccess.getRpcAccess().getRpcKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__1__Impl
	rule__Rpc__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getNameAssignment_1()); }
(rule__Rpc__NameAssignment_1)
{ after(grammarAccess.getRpcAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__2__Impl
	rule__Rpc__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getRpcAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__3__Impl
	rule__Rpc__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getArgTypeAssignment_3()); }
(rule__Rpc__ArgTypeAssignment_3)
{ after(grammarAccess.getRpcAccess().getArgTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__4__Impl
	rule__Rpc__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getRpcAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__5__Impl
	rule__Rpc__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getReturnsKeyword_5()); }

	'returns' 

{ after(grammarAccess.getRpcAccess().getReturnsKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__6__Impl
	rule__Rpc__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getLeftParenthesisKeyword_6()); }

	'(' 

{ after(grammarAccess.getRpcAccess().getLeftParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__7__Impl
	rule__Rpc__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getReturnTypeAssignment_7()); }
(rule__Rpc__ReturnTypeAssignment_7)
{ after(grammarAccess.getRpcAccess().getReturnTypeAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__8__Impl
	rule__Rpc__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getRpcAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__9__Impl
	rule__Rpc__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getGroup_9()); }
(rule__Rpc__Group_9__0)?
{ after(grammarAccess.getRpcAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRpcAccess().getSemicolonKeyword_10()); }
(
	';' 
)
{ after(grammarAccess.getRpcAccess().getSemicolonKeyword_10()); }
)
(
{ before(grammarAccess.getRpcAccess().getSemicolonKeyword_10()); }
(
	';' 
)*
{ after(grammarAccess.getRpcAccess().getSemicolonKeyword_10()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__Rpc__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group_9__0__Impl
	rule__Rpc__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getLeftCurlyBracketKeyword_9_0()); }

	'{' 

{ after(grammarAccess.getRpcAccess().getLeftCurlyBracketKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group_9__1__Impl
	rule__Rpc__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getOptionsAssignment_9_1()); }
(rule__Rpc__OptionsAssignment_9_1)*
{ after(grammarAccess.getRpcAccess().getOptionsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Rpc__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Rpc__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getRightCurlyBracketKeyword_9_2()); }

	'}' 

{ after(grammarAccess.getRpcAccess().getRightCurlyBracketKeyword_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Extend__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extend__Group__0__Impl
	rule__Extend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendAccess().getExtendKeyword_0()); }

	'extend' 

{ after(grammarAccess.getExtendAccess().getExtendKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extend__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extend__Group__1__Impl
	rule__Extend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendAccess().getTypeAssignment_1()); }
(rule__Extend__TypeAssignment_1)
{ after(grammarAccess.getExtendAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extend__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extend__Group__2__Impl
	rule__Extend__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getExtendAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extend__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extend__Group__3__Impl
	rule__Extend__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendAccess().getElementsAssignment_3()); }
(rule__Extend__ElementsAssignment_3)*
{ after(grammarAccess.getExtendAccess().getElementsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extend__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extend__Group__4__Impl
	rule__Extend__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getExtendAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Extend__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Extend__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendAccess().getSemicolonKeyword_5()); }
(
	';' 
)?
{ after(grammarAccess.getExtendAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__FULL_ID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FULL_ID__Group__0__Impl
	rule__FULL_ID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FULL_ID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFULL_IDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getFULL_IDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FULL_ID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FULL_ID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FULL_ID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFULL_IDAccess().getGroup_1()); }
(rule__FULL_ID__Group_1__0)
{ after(grammarAccess.getFULL_IDAccess().getGroup_1()); }
)
(
{ before(grammarAccess.getFULL_IDAccess().getGroup_1()); }
(rule__FULL_ID__Group_1__0)*
{ after(grammarAccess.getFULL_IDAccess().getGroup_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FULL_ID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FULL_ID__Group_1__0__Impl
	rule__FULL_ID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FULL_ID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFULL_IDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getFULL_IDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FULL_ID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FULL_ID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FULL_ID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFULL_IDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getFULL_IDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Proto__SyntaxAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtoAccess().getSyntaxSyntaxParserRuleCall_0_0()); }
	ruleSyntax{ after(grammarAccess.getProtoAccess().getSyntaxSyntaxParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Proto__StatementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtoAccess().getStatementsStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getProtoAccess().getStatementsStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Syntax__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSyntaxAccess().getNameSTRINGTerminalRuleCall_2_0()); }
	RULE_STRING{ after(grammarAccess.getSyntaxAccess().getNameSTRINGTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Package__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageAccess().getNameVar_fullParserRuleCall_1_0()); }
	ruleVar_full{ after(grammarAccess.getPackageAccess().getNameVar_fullParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Option__SourceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getSourceMessageFieldCrossReference_1_0()); }
(
{ before(grammarAccess.getOptionAccess().getSourceMessageFieldVar_fullParserRuleCall_1_0_1()); }
	ruleVar_full{ after(grammarAccess.getOptionAccess().getSourceMessageFieldVar_fullParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getOptionAccess().getSourceMessageFieldCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Option__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionAccess().getValueValueParserRuleCall_3_0()); }
	ruleValue{ after(grammarAccess.getOptionAccess().getValueValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringLink__TargetAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringLinkAccess().getTargetSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringLinkAccess().getTargetSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanLink__TargetAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanLinkAccess().getTargetBOOLEnumRuleCall_0()); }
	ruleBOOL{ after(grammarAccess.getBooleanLinkAccess().getTargetBOOLEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntLink__TargetAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntLinkAccess().getTargetNUMINTTerminalRuleCall_0()); }
	RULE_NUMINT{ after(grammarAccess.getIntLinkAccess().getTargetNUMINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLink__TargetAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoubleLinkAccess().getTargetNUMDOUBLETerminalRuleCall_0()); }
	RULE_NUMDOUBLE{ after(grammarAccess.getDoubleLinkAccess().getTargetNUMDOUBLETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getMessageAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Message__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageAccess().getElementsMessageElementParserRuleCall_3_0()); }
	ruleMessageElement{ after(grammarAccess.getMessageAccess().getElementsMessageElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionRange__FromAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionRangeAccess().getFromNUMINTTerminalRuleCall_1_0()); }
	RULE_NUMINT{ after(grammarAccess.getExtensionRangeAccess().getFromNUMINTTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExtensionRange__ToAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtensionRangeAccess().getToNUMINTTerminalRuleCall_2_1_0()); }
	RULE_NUMINT{ after(grammarAccess.getExtensionRangeAccess().getToNUMINTTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__ModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getModifierModifierEnumRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getMessageFieldAccess().getModifierModifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getTypeTypeLinkParserRuleCall_1_0()); }
	ruleTypeLink{ after(grammarAccess.getMessageFieldAccess().getTypeTypeLinkParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getNameVarParserRuleCall_2_0()); }
	ruleVar{ after(grammarAccess.getMessageFieldAccess().getNameVarParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__IndexAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getIndexNUMINTTerminalRuleCall_4_0()); }
	RULE_NUMINT{ after(grammarAccess.getMessageFieldAccess().getIndexNUMINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageField__OptionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageFieldAccess().getOptionsFieldOptionsParserRuleCall_5_0()); }
	ruleFieldOptions{ after(grammarAccess.getMessageFieldAccess().getOptionsFieldOptionsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__ModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getModifierModifierEnumRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getGroupAccess().getModifierModifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getNameVarParserRuleCall_2_0()); }
	ruleVar{ after(grammarAccess.getGroupAccess().getNameVarParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__IndexAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getIndexNUMINTTerminalRuleCall_4_0()); }
	RULE_NUMINT{ after(grammarAccess.getGroupAccess().getIndexNUMINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Group__ElementsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGroupAccess().getElementsMessageFieldParserRuleCall_6_0()); }
	ruleMessageField{ after(grammarAccess.getGroupAccess().getElementsMessageFieldParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexTypeLink__TargetAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getComplexTypeLinkAccess().getTargetComplexTypeCrossReference_0()); }
(
{ before(grammarAccess.getComplexTypeLinkAccess().getTargetComplexTypeVar_fullParserRuleCall_0_1()); }
	ruleVar_full{ after(grammarAccess.getComplexTypeLinkAccess().getTargetComplexTypeVar_fullParserRuleCall_0_1()); }
)
{ after(grammarAccess.getComplexTypeLinkAccess().getTargetComplexTypeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ScalarTypeLink__TargetAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getScalarTypeLinkAccess().getTargetScalarTypeEnumRuleCall_0()); }
	ruleScalarType{ after(grammarAccess.getScalarTypeLinkAccess().getTargetScalarTypeEnumRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOptions__OptionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOptionsAccess().getOptionsFieldOptionParserRuleCall_1_0()); }
	ruleFieldOption{ after(grammarAccess.getFieldOptionsAccess().getOptionsFieldOptionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldOptions__OptionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldOptionsAccess().getOptionsFieldOptionParserRuleCall_2_1_0()); }
	ruleFieldOption{ after(grammarAccess.getFieldOptionsAccess().getOptionsFieldOptionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultValueFieldOption__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultValueFieldOptionAccess().getValueValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getDefaultValueFieldOptionAccess().getValueValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFieldOption__SourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFieldOptionAccess().getSourceOptionSourceParserRuleCall_0_0()); }
	ruleOptionSource{ after(grammarAccess.getNativeFieldOptionAccess().getSourceOptionSourceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NativeFieldOption__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNativeFieldOptionAccess().getValueValueParserRuleCall_2_0()); }
	ruleValue{ after(grammarAccess.getNativeFieldOptionAccess().getValueValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionSource__TargetAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionSourceAccess().getTargetIndexedElementCrossReference_0()); }
(
{ before(grammarAccess.getOptionSourceAccess().getTargetIndexedElementVar_fullParserRuleCall_0_1()); }
	ruleVar_full{ after(grammarAccess.getOptionSourceAccess().getTargetIndexedElementVar_fullParserRuleCall_0_1()); }
)
{ after(grammarAccess.getOptionSourceAccess().getTargetIndexedElementCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Enum__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumAccess().getElementsEnumElementParserRuleCall_3_0()); }
	ruleEnumElement{ after(grammarAccess.getEnumAccess().getElementsEnumElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getEnumFieldAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__IndexAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getIndexNUMINTTerminalRuleCall_2_0()); }
	RULE_NUMINT{ after(grammarAccess.getEnumFieldAccess().getIndexNUMINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__OptionsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getOptionsFieldOptionParserRuleCall_3_1_0()); }
	ruleFieldOption{ after(grammarAccess.getEnumFieldAccess().getOptionsFieldOptionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumField__OptionsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumFieldAccess().getOptionsFieldOptionParserRuleCall_3_2_1_0()); }
	ruleFieldOption{ after(grammarAccess.getEnumFieldAccess().getOptionsFieldOptionParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getServiceAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Service__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getServiceAccess().getElementsServiceElementParserRuleCall_3_0()); }
	ruleServiceElement{ after(grammarAccess.getServiceAccess().getElementsServiceElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getRpcAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__ArgTypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getArgTypeMessageLinkParserRuleCall_3_0()); }
	ruleMessageLink{ after(grammarAccess.getRpcAccess().getArgTypeMessageLinkParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__ReturnTypeAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getReturnTypeMessageLinkParserRuleCall_7_0()); }
	ruleMessageLink{ after(grammarAccess.getRpcAccess().getReturnTypeMessageLinkParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Rpc__OptionsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRpcAccess().getOptionsOptionParserRuleCall_9_1_0()); }
	ruleOption{ after(grammarAccess.getRpcAccess().getOptionsOptionParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MessageLink__TargetAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMessageLinkAccess().getTargetMessageCrossReference_0()); }
(
{ before(grammarAccess.getMessageLinkAccess().getTargetMessageFULL_IDParserRuleCall_0_1()); }
	ruleFULL_ID{ after(grammarAccess.getMessageLinkAccess().getTargetMessageFULL_IDParserRuleCall_0_1()); }
)
{ after(grammarAccess.getMessageLinkAccess().getTargetMessageCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendAccess().getTypeMessageCrossReference_1_0()); }
(
{ before(grammarAccess.getExtendAccess().getTypeMessageFULL_IDParserRuleCall_1_0_1()); }
	ruleFULL_ID{ after(grammarAccess.getExtendAccess().getTypeMessageFULL_IDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getExtendAccess().getTypeMessageCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Extend__ElementsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendAccess().getElementsMessageElementParserRuleCall_3_0()); }
	ruleMessageElement{ after(grammarAccess.getExtendAccess().getElementsMessageElementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NUMDOUBLE : RULE_NUMINT '.' RULE_INT;

RULE_NUMINT : ('0'|'-'? '1'..'9' RULE_INT*);

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


